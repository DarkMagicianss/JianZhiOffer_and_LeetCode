时间限制：1秒 空间限制：32768K 热度指数：174218
本题知识点： 链表
 算法知识视频讲解
题目描述
给一个链表，若其中包含环，请找出该链表的环的入口结点，否则，输出null。

思路：定义快慢两个指针，相遇后（环中相汇点）将快指针指向pHead 然后一起走，每次往后挪一位，相遇的节点即为所求。
详细分析：相遇即p1==p2时，p2所经过节点数为2x,p1所经过节点数为x,设环中有n个节点,p2比p1多走一圈有2x=n+x; n=x;
可以看出p1实际走了一个环的步数，再让p2指向链表头部，p1位置不变，p1,p2每次走一步直到p1==p2; 此时p1指向环的入口。

首先当两个指针在环内碰到的时候p1走了2x p2走了x
假设p2入环前走了d1 入环后走了d2 因此x=d1+d2 而p1已经和p2碰撞 因此p1走了2x = d1+d2+kn(n为环的大小)
因此两者联立 可以得出x = kn 也就是p2走的路程是环的k倍
这时候让p1节点从pHead再走d1 而p2节点再走d1 p2走的总路程为x+d1=kn+d1即为走了d1后绕环走了正好k圈
因此两个正好在环的入口碰到
//这也是一种奇妙的想法
public ListNode EntryNodeOfLoop(ListNode pHead) {
    if (pHead == null || pHead.next == null)
        return null;
    ListNode slow = pHead;
    ListNode fast = pHead;

    while (fast != null && fast.next != null) {
        slow = slow.next;
        fast = fast.next.next;
        if (slow == fast){
            fast = pHead;
            while (fast != slow) {
                fast = fast.next;
                slow = slow.next;
            }
            if (fast == slow)
                return slow;
        }
    }
    return null;
}


