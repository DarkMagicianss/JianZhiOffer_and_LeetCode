LeetCode137
给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。

说明：

你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

示例 1:

输入: [2,2,3,2]
输出: 3
示例 2:

输入: [0,1,0,1,0,1,99]
输出: 99

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/single-number-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//也算是在常数个空间的情况下解决了问题
    public int singleNumber(int[] nums) {
        int[] code = new int[32];
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < 32; j++) {
                code[j] += (nums[i] >> j & 1);
            }
        }
        int result = 0;
        for (int i = 0; i < 31; i++) {
            result += (code[i] % 3 * Math.pow(2, i));
        }
        return code[31] % 3 == 1?(result | (1 << 31)):result;
    }
