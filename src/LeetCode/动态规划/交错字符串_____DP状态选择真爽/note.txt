LeetCode97
给定三个字符串 s1, s2, s3, 验证 s3 是否是由 s1 和 s2 交错组成的。

示例 1:

输入: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbcbcac"
输出: true
示例 2:

输入: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbbaccc"
输出: false

    public boolean isInterleave(String s1, String s2, String s3) {
        int len_s1 = s1.length();
        int len_s2 = s2.length();
        int len_s3 = s3.length();
        if (len_s3 != len_s1 + len_s2) return false;
        if (len_s1 == 0) return s2.equals(s3);
        if (len_s2 == 0) return s1.equals(s3);
        boolean[][] dp = new boolean[len_s1 + 1][len_s2 + 1];
        dp[0][0] = true;
        for (int i = 1; i < len_s1+1; i++) {
            if (dp[i - 1][0] == true && s3.charAt(i - 1) == s1.charAt(i - 1)) {
                dp[i][0] = true;
            }
        }
        for (int j = 1; j < len_s2+1; j++) {
            if (dp[0][j - 1] == true && s3.charAt(j - 1) == s2.charAt(j - 1)) {
                dp[0][j] = true;
            }
        }
        for (int i = 1; i < len_s1 + 1; i++) {
            for (int j = 1; j < len_s2 + 1; j++) {
                if (dp[i-1][j] == true && s3.charAt(i+j-1) == s1.charAt(i-1)){
                    dp[i][j]=true;
                }else if(dp[i][j-1] == true && s3.charAt(i+j-1) == s2.charAt(j-1)){
                    dp[i][j]=true;
                }
                System.out.print(dp[i][j]);
            }
            System.out.println(" ");
        }
        return dp[len_s1][len_s2];
    }