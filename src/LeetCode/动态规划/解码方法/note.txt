LeetCode91
一条包含字母 A-Z 的消息通过以下方式进行了编码：

'A' -> 1
'B' -> 2
...
'Z' -> 26
给定一个只包含数字的非空字符串，请计算解码方法的总数。

示例 1:

输入: "12"
输出: 2
解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。
示例 2:

输入: "226"
输出: 3
解释: 它可以解码为 "BZ" (2 26), "VF" (22 6), 或者 "BBF" (2 2 6) 。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/decode-ways
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//麻烦的自定义方法
    public int numDecodings(String s) {
        if (s.length() == 0 || s.charAt(0) == '0') return 0;
        if (s.length() == 1) return 1;
        for (int i = 1; i < s.length(); i++) {
            int temp = (s.charAt(i - 1) - '0') * 10 + s.charAt(i) - '0';
            if (temp >= 27) {
                return sub_numDecodings(s.substring(0, i)) * numDecodings(s.substring(i));
            } else if (temp == 10 || temp == 20) {
                if (s.substring(i + 1).length() == 0) return sub_numDecodings(s.substring(0, i + 1));
                else return sub_numDecodings(s.substring(0, i + 1)) * numDecodings(s.substring(i + 1));
            }
        }
        return sub_numDecodings(s);
    }

    public int sub_numDecodings(String s) {
        //该函数里面一直以1,2连续 然后可能以3456789结束
        if (s.charAt(s.length() - 1) == '0') s = s.substring(0, s.length() - 2);
        if (s.length() == 0) return 1;
        int len = s.length();
        int base = 1;//各自解码
        for (int i = 1; len >= 2 * i; i++) {
            base += C(i, len - i);
        }
        return base;
    }

    public int C(int m, int n) {//Cmn
        if (m == 1) return n;
        return jiechen(n) / (jiechen(m) * jiechen(n - m));
    }

    public int jiechen(int n) {
        if (n <= 1) return 1;
        for (int i = n - 1; i >= 1; i--) {
            n *= i;
        }
        return n;
    }