LeetCode47
给定一个可包含重复数字的序列，返回所有不重复的全排列。

示例:

输入: [1,1,2]
输出:
[
  [1,1,2],
  [1,2,1],
  [2,1,1]
]

使用HashSet去重 果然满了很多
    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> permuteUnique(int[] nums) {
        if (nums.length == 0) return result;
        Arrays.sort(nums);
        Integer[] arr = new Integer[nums.length];
        for (int i = 0; i < nums.length; i++) {
            arr[i] = nums[i];
        }
        sub_permute(arr, 0);
        return result;
    }

    private void sub_permute(Integer[] nums, int start_index) {
        HashSet set = new HashSet();
        for (int i = start_index; i < nums.length; i++) {
            if (start_index != i) {
                if (nums[i] == nums[start_index]) continue;
            }
            if(set.contains(nums[i]))continue;
            set.add(nums[i]);
            swap(nums, start_index, i);
            if (start_index < nums.length - 1) {
                sub_permute(nums, start_index + 1);
            } else {
                result.add(new ArrayList(Arrays.asList(nums)));
            }
            swap(nums, start_index, i);
        }
    }

    private void swap(Integer[] nums, int start_index, int end_index) {
        int temp = nums[start_index];
        nums[start_index] = nums[end_index];
        nums[end_index] = temp;
    }

