LeetCode23
合并 k 个排序链表，返回合并后的排序链表。请分析和描述算法的复杂度。

示例:

输入:
[
  1->4->5,
  1->3->4,
  2->6
]
输出: 1->1->2->3->4->4->5->6

//使用一个优先队列维护每一个链表的节点 然后从头开始取节点
    public ListNode mergeKLists(ListNode[] lists) {
        if (lists.length == 0) return null;
        if (lists.length == 1) return lists[0];
        //维护一个n长的优先队列
        PriorityQueue<ListNode> queue = new PriorityQueue<>(new Comparator<ListNode>() {
            @Override
            public int compare(ListNode o1, ListNode o2) {
                return (o1.val - o2.val);
            }
        });
        for (int i = 0; i < lists.length; i++) {//添加每个链表的头节点
            if (lists[i] != null) queue.add(lists[i]);
        }
        ListNode result = null;
        ListNode step = null;
        if (!queue.isEmpty()) {//确定结果的头节点
            result = queue.poll();
            if(result.next != null)queue.add(result.next);
            step = result;
        }
        //进行后续节点的弹出和插入
        while (!queue.isEmpty()) {
            step.next = queue.poll();
            step = step.next;
            if (step.next != null) queue.add(step.next);
        }
        return result;
    }

//使用2个排序链表的合并进行遍历合并 可以是可以 但是貌似时间有点多余了